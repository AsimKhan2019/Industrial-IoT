{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "applicationName": {
            "type": "string",
            "metadata": {
                "description": "The name of the services endpoint."
            }
        },
        "keyVaultName": {
            "type": "string",
            "metadata": {
                "description": "A user created keyvault containing service configuration."
            }
        },
        "keyVaultUri": {
            "type": "string",
            "metadata": {
                "description": "The Uri of the Azure Key Vault."
            }
        },
		"aksNodeResourceGroup": { 
			"type": "string", 
            "metadata": {
                "description": "The resource group of the cluster nodes."
            }
		},
        "aksClusterName": {
            "type": "string",
            "metadata": {
                "description": "The resource id of the Azure Managed Kubernetes Cluster to deploy the services to."
            }
        },
        "aksAdminIdentityResourceId": {
            "type": "string",
            "metadata": {
                "description": "The admin managed identity resource to access the cluster."
            }
        },
        "helmRepoUrl": {
            "type": "string",
            "defaultValue": "https://microsoft.github.io/charts/repo",
            "metadata": {
                "description": "URL of the Helm repository containing azure-industrial-iot chart"
            }
        },
        "helmChartVersion": {
            "type": "string",
            "defaultValue": "0.3.1",
            "metadata": {
                "description": "Version of azure-industrial-iot Helm chart to use"
            }
        },
        "dockerServer": {
            "type": "string",
            "defaultValue": "mcr.microsoft.com",
            "metadata": {
                "description": "Specifies the endpoint of the Container Registry."
            }
        },
        "dockerUser": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Specifies the user name to log into a private Container Registry."
            }
        },
        "dockerPassword": {
            "type": "secureString",
            "defaultValue": "",
            "metadata": {
                "description": "Specifies the password to use for a private Container Registry."
            }
        },
        "imagesNamespace": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Specifies the namespace prefix for the images in the Container Registry."
            }
        },
        "imagesTag": {
            "type": "string",
            "defaultValue": "2.7.199",
            "metadata": {
                "description": "Specifies the image version tag to use for all images."
            }
        },
        "managedIdentityName": {
            "type": "string",
            "defaultValue": "[concat('msi', take(uniqueString(subscription().subscriptionId, resourceGroup().id), 5))]",
            "metadata": {
                "description": "The name of the managed identity the platform instance uses to access azure services."
            }
        },
        "publicIpName": {
            "type": "string",
            "defaultValue": "[concat('public-ip-', take(uniqueString(subscription().subscriptionId, resourceGroup().id), 5))]",
            "metadata": {
                "description": "Public Ip resource name."
            }
        },
        "publicIpSku": {
            "type": "string",
            "allowedValues": [
                "Basic",
                "Standard"
            ],
            "defaultValue": "Standard",
            "metadata": {
                "description": "Public IP Sku to use"
            }
        },
        "publicIpAllocationMethod": {
            "type": "string",
            "allowedValues": [
                "Dynamic",
                "Static"
            ],
            "defaultValue": "Static",
            "metadata": {
                "description": "Allocation method for the public IP Address."
            }
        },
        "publicIpDomainNameLabel": {
            "type": "string",
            "defaultValue": "[parameters('applicationName')]",
            "metadata": {
                "description": "Public Ip domain label."
            }
        },
        "templateUrl": {
            "type": "string",
            "defaultValue": "[if(contains(deployment().properties, 'templateLink'), deployment().properties.templateLink.uri, 'https://raw.githubusercontent.com/Azure/Industrial-IoT/master/deploy/templates/')]",
            "metadata": {
                "description": "The artifacts url from which to pull all linked templates. Default is official repository."
            }
        },
        "tags": {
            "type": "object",
            "defaultValue": {},
            "metadata": {
                "description": "Tags for Azure resources."
            }
        }
    },
    "variables": {
        "managedIdentityResourceId": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName'))]",
        "managedIdentityRoleAssignmentsName": "[concat('rbac.platform.', take(uniqueString(subscription().subscriptionId, resourceGroup().id), 5))]",
        "managedIdentityRoleAssignmentsId": "[resourceId('Microsoft.Resources/deployments', variables('managedIdentityRoleAssignmentsName'))]",
        "helmChartsInstallScriptResourceName": "[concat('deploy.helm', take(uniqueString(subscription().subscriptionId, resourceGroup().id), 5))]",
        "publicIpName": "[concat('services-ip-', take(uniqueString(subscription().subscriptionId, resourceGroup().id), 5))]",
        "publicIpId": "[resourceId('Microsoft.Resources/deployments', variables('publicIpName'))]",
        "configurationResourceId": "[resourceId('Microsoft.Resources/deployments', variables('configurationResourceName'))]",
        "configurationResourceName": "config.platform"
    },
    "resources": [
        {
            "comments": "Create the managed identity for the micro services.",
            "name": "[parameters('managedIdentityName')]",
            "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
            "apiVersion": "2018-11-30",
            "location": "[resourceGroup().location]",
            "tags": "[parameters('tags')]"
        },
        {
            "comments": "Assign permissions to micro services to access rbac enabled Azure services.",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-08-01",
            "name": "[variables('managedIdentityRoleAssignmentsName')]",
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "managedIdentityResourceId": {
                        "value": "[variables('managedIdentityResourceId')]"
                    },
                    "assignRoles": {
                        "value": [ "KeyVaultSecretOfficer", "StorageBlobDataContributor" ]
                    },
                    "scope":{
                         "value": "[resourceGroup().id]"
                    },
                    "tags": {
                        "value": "[parameters('tags')]"
                    }
                },
                "templateLink": {
                    "contentVersion": "1.0.0.0",
                    "uri": "[concat(parameters('templateUrl'), 'azuredeploy.rbac.json')]"
                }
            },
            "dependsOn": [
                "[variables('managedIdentityResourceId')]"
            ]
        },
        {
            "comments": "Create a public IP address of the services endpoint in the node resource group.",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-08-01",
            "name": "[variables('publicIpName')]",
            "condition": "[and(not(empty(parameters('aksClusterName'))), not(empty(parameters('aksNodeResourceGroup'))))]",
            "resourceGroup": "[parameters('aksNodeResourceGroup')]",
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "publicIpName": {
                        "value": "[parameters('publicIpName')]"
                    },
                    "publicIpSku": {
                        "value": "[parameters('publicIpSku')]"
                    },
                    "publicIpAllocationMethod": {
                        "value": "[parameters('publicIpAllocationMethod')]"
                    },
                    "publicIpDomainNameLabel": {
                        "value": "[parameters('publicIpDomainNameLabel')]"
                    },
                    "tags": {
                        "value": "[parameters('tags')]"
                    }
                },
                "templateLink": {
                    "contentVersion": "1.0.0.0",
                    "uri": "[concat(parameters('templateUrl'), 'azuredeploy.publicip.json')]"
                }
            }
        },
        {
            "comments": "Install the platform into the AKS cluster and set up monitoring and TLS termination.",
            "type": "Microsoft.Resources/deploymentScripts",
            "apiVersion": "2020-10-01",
            "name": "[variables('helmChartsInstallScriptResourceName')]",
            "condition": "[and(not(empty(parameters('aksClusterName'))), not(empty(parameters('helmChartVersion'))))]",
            "location": "[resourceGroup().location]",
            "tags": "[parameters('tags')]",
            "kind": "AzureCLI",
            "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                    "[parameters('aksAdminIdentityResourceId')]": {}
                }
            },
            "properties": {
                "forceUpdateTag": "[parameters('helmChartVersion')]",
                "azCliVersion": "2.15.1",
                "primaryScriptURI": "[concat(parameters('templateUrl'), 'scripts/helm-setup.sh')]",
                "arguments": "[concat(' --resource_group ', '\"', resourceGroup().name, '\"', ' --aks_cluster ', '\"', parameters('aksClusterName'), '\"', ' --load_balancer_ip ', '\"', reference(variables('publicIpId')).outputs.ipAddress.value, '\"', ' --public_ip_dns_label ', '\"', reference(variables('publicIpId')).outputs.domainNameLabel.value, '\"', ' --helm_repo_url ', '\"', parameters('helmRepoUrl'), '\"', ' --helm_chart_version ', '\"', parameters('helmChartVersion'), '\"', ' --managed_identity_id ', '\"', variables('managedIdentityResourceId'), '\"', ' --managed_identity_name ', '\"', parameters('managedIdentityName'), '\"', ' --managed_identity_client_id ', '\"', reference(variables('managedIdentityResourceId'), '2018-11-30').clientId, '\"', ' --tenant_id ', '\"', reference(variables('managedIdentityResourceId'), '2018-11-30').tenantId, '\"', ' --image_tag ', '\"', parameters('imagesTag'), '\"', ' --image_ns ', '\"', parameters('imagesNamespace'), '\"', ' --docker_server ', '\"', parameters('dockerServer'), '\"', ' --docker_user ', '\"', parameters('dockerUser'), '\"', ' --docker_password ', '\"', parameters('dockerPassword'), '\"', ' --key_vault_uri ', '\"',  parameters('keyVaultUri'), '\"', ' --services_hostname ', '\"', reference(variables('publicIpId')).outputs.fqdn.value, '\"' )]",
                "supportingScriptUris": [
                    "[concat(parameters('templateUrl'), 'config/omsagent.yaml')]",
                    "[concat(parameters('templateUrl'), 'config/letsencrypt.yaml')]"
                ],
                "timeout": "PT1H",
                "cleanupPreference": "OnSuccess",
                "retentionInterval": "P1D"
            },
            "dependsOn": [
                "[variables('configurationResourceId')]",
                "[variables('publicIpId')]",
                "[variables('managedIdentityRoleAssignmentsId')]"
            ]
        },
        {
            "comments": "Save platform configuration in keyVault.",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-08-01",
            "name": "[variables('configurationResourceName')]",
            "condition": "[not(empty(parameters('keyVaultName')))]",
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "keyVaultName": {
                        "value": "[parameters('keyVaultName')]"
                    },
                    "configuration": {
                        "value": [
                            {
                                "key": "PCS_SERVICE_NAME",
                                "value": "[concat('https://', reference(variables('publicIpId')).outputs.fqdn.value)]"
                            },
                            {
                                "key": "PCS_MSI_APPID",
                                "value": "[reference(variables('managedIdentityResourceId'), '2018-11-30').clientId]"
                            },
                            {
                                "key": "PCS_MSI_TENANT",
                                "value": "[reference(variables('managedIdentityResourceId'), '2018-11-30').tenantId]"
                            },
                            {
                                "key": "PCS_DOCKER_SERVER",
                                "value": "[parameters('dockerServer')]"
                            },
                            {
                                "key": "PCS_DOCKER_USER",
                                "value": "[parameters('dockerUser')]"
                            },
                            {
                                "key": "PCS_DOCKER_PASSWORD",
                                "value": "[parameters('dockerPassword')]"
                            },
                            {
                                "key": "PCS_IMAGES_NAMESPACE",
                                "value": "[parameters('imagesNamespace')]"
                            }
                        ]
                    },
                    "tags": {
                        "value": "[parameters('tags')]"
                    }
                },
                "templateLink": {
                    "contentVersion": "1.0.0.0",
                    "uri": "[concat(parameters('templateUrl'), 'azuredeploy.configuration.json')]"
                }
            },
            "dependsOn": [
                "[variables('managedIdentityRoleAssignmentsId')]",
                "[variables('publicIpId')]"
            ]
        }
    ],
    "outputs": {
        "serviceUrl": {
            "type": "string",
            "value": "[concat('https://', reference(variables('publicIpId')).outputs.fqdn.value)]"
        },
        "managedIdentityResourceName": {
            "type": "string",
            "value": "[parameters('managedIdentityName')]"
        },
        "managedIdentityResourceId": {
            "type": "string",
            "value": "[variables('managedIdentityResourceId')]"
        },
        "managedIdentityClientId": {
            "type": "string",
            "value": "[reference(variables('managedIdentityResourceId')).clientId]"
        },
        "managedIdentityPrincipalId": {
            "type": "string",
            "value": "[reference(variables('managedIdentityResourceId')).principalId]"
        },
        "managedIdentityTenantId": {
            "type": "string",
            "value": "[reference(variables('managedIdentityResourceId')).tenantId]"
        }
    }
}