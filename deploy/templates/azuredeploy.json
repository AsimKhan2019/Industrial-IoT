{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "serviceAppId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Specifies the registered service application identifier (GUID) in your Azure Active Directory tenant."
            }
        },
        "serviceAppSecret": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "The registered service application secret used to authenticate the service principal."
            }
        },
        "clientAppId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "A client application identifier (GUID) in your Azure Active Directory tenant for confidential web applications."
            }
        },
        "clientAppSecret": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "The registered client application secret for confidential web applications."
            }
        },
        "publicClientAppId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "A client application identifier (GUID) in your Azure Active Directory tenant for public application such as CLI."
            }
        },
        "keyVaultPrincipalId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Specifies the object ID of a principal in your Azure Active Directory tenant to access keyvault."
            }
        },
        "authorityUri": {
            "type": "string",
            "defaultValue": "https://login.microsoftonline.com",
            "metadata": {
                "description": "Url of the Authority (example: https://login.microsoftonline.com)"
            }
        },
        "serviceAudience": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Audience value to validate the token audience field against."
            }
        },
        "trustedTokenIssuer": {
            "type": "string",
            "defaultValue": "[concat('https://sts.windows.net/', subscription().tenantId)]",
            "metadata": {
                "description": "Optional Issuer value to validate received tokens against."
            }
        },
        "siteName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "The name of the application to create. Leave empty for local or services only development."
            }
        },
        "serviceSiteName": {
            "type": "string",
            "defaultValue": "[if(not(empty(parameters('siteName'))), concat('svc', take(uniqueString(subscription().subscriptionId, resourceGroup().id), 5)), '')]",
            "metadata": {
                "description": "The name of the services endpoint. Leave empty for local development."
            }
        },
        "simulationProfile": {
            "type": "string",
            "defaultValue": "default",
            "allowedValues": [
                "default",
                "testing"
            ],
            "metadata": {
                "description": "The simulation profile to use."
            }
        },
        "numberOfLinuxGateways": {
            "type": "int",
            "defaultValue": 0,
            "maxValue": 255,
            "minValue": 0,
            "metadata": {
                "description": "Number of OPC UA Linux simulation gateways to deploy."
            }
        },
        "numberOfWindowsGateways": {
            "type": "int",
            "defaultValue": 0,
            "maxValue": 255,
            "minValue": 0,
            "metadata": {
                "description": "Number of OPC UA Windows simulation gateways to deploy."
            }
        },
        "numberOfSimulations": {
            "type": "int",
            "defaultValue": 1,
            "maxValue": 255,
            "minValue": 0,
            "metadata": {
                "description": "Number of simulations to deploy into each gateway network."
            }
        },
        "edgeVmSize": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "The size of the gateway VM to provision."
            }
        },
        "simulationVmSize": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "The size of the simulation VM to provision."
            }
        },
        "edgeUserName": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "A name for the simulation vm administrator user."
            }
        },
        "edgePassword": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "The supplied password must be between 8-75 characters long and must satisfy at least 3 of password complexity requirements: 1) Contains an uppercase character 2) Contains a lowercase character 3) Contains a numeric digit 4) Contains a special character. Control characters are not allowed"
            }
        },
        "dockerServer": {
            "type": "string",
            "defaultValue": "mcr.microsoft.com",
            "metadata": {
                "description": "Specifies the endpoint of the Container Registry to pull workloads from."
            }
        },
        "dockerUser": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Specifies the user name to log into a private Container Registry."
            }
        },
        "dockerPassword": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "Specifies the password to use for a private Container Registry."
            }
        },
        "imagesNamespace": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Specifies the namespace prefix for all images in the Container Registry."
            }
        },
        "imagesTag": {
            "type": "string",
            "defaultValue": "latest",
            "metadata": {
                "description": "Specifies the image version tag to use for all container images."
            }
        },
        "authTenantId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Specifies an Azure Active Directory tenant for authentication that is different from the one tied to the subscription."
            }
        },
        "branchName": {
            "type": "string",
            "defaultValue": "master",
            "metadata": {
                "description": "The branch from which to deploy deploy services and application.  Default to master."
            }
        },
        "repoUrl": {
            "type": "string",
            "defaultValue": "https://github.com/Azure/Industrial-IoT",
            "metadata": {
                "description": "The repository url from which to deploy services and application.  Default is official repository."
            }
        },
        "templateUrl": {
            "type": "string",
            "defaultValue": "[if(contains(deployment().properties, 'templateLink'), deployment().properties.templateLink.uri, concat('https://raw.githubusercontent.com/Azure/Industrial-IoT/', parameters('branchName'), '/deploy/templates/'))]",
            "metadata": {
                "description": "The artifacts url from which to pull all linked templates. Default is official repository."
            }
        },
        "tags": {
            "type": "object",
            "defaultValue": {},
            "metadata": {
                "description": "Tags for Azure resources."
            }
        }
    },
    "variables": {
        "minimumInfrastructureResourceName": "infrastructure.minimum",
        "minimumInfrastructureResourceId": "[resourceId('Microsoft.Resources/deployments', variables('minimumInfrastructureResourceName'))]",
        "authConfigurationResourcName": "auth.configuration",
        "platformDeployment": "[not(and(empty(parameters('siteName')), empty(parameters('serviceSiteName'))))]",
        "platformResourcName": "platform",
        "platformResourceId": "[resourceId('Microsoft.Resources/deployments', variables('platformResourcName'))]",
        "simulationScriptsUrl": "[if(empty(parameters('repoUrl')), '', concat(parameters('repoUrl'), '/', parameters('branchName'), '/deploy/scripts'))]",
        "simulationDeployment": "[and(not(and(equals(0, parameters('numberOfLinuxGateways')), equals(0, parameters('numberOfWindowsGateways')))), not(empty(variables('simulationScriptsUrl'))))]",
        "simulationResourcName": "simulation"
    },
    "resources": [
        {
            "comments": "Deploy required Azure Infrastructure for Industrial IoT.",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-08-01",
            "name": "[variables('minimumInfrastructureResourceName')]",
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "templateUrl": {
                        "value": "[parameters('templateUrl')]"
                    },
                    "keyVaultPrincipalId": {
                        "value": "[parameters('keyVaultPrincipalId')]"
                    },
                    "tags": {
                        "value": "[parameters('tags')]"
                    }
                },
                "templateLink": {
                    "contentVersion": "1.0.0.0",
                    "uri": "[concat(parameters('templateUrl'), 'azuredeploy.minimum.json')]"
                }
            }
        },
        {
            "comments": "Save auth configuration in keyVault.",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-08-01",
            "name": "[variables('authConfigurationResourcName')]",
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "keyVaultName": {
                        "value": "[reference(variables('minimumInfrastructureResourceId')).outputs.keyVaultName.value]"
                    },
                    "configuration": {
                        "value": [
                            {
                                "key": "PCS_AUTH_REQUIRED",
                                "value": "[not(empty(parameters('serviceAppId')))]"
                            },
                            {
                                "key": "PCS_AUTH_TENANT",
                                "value": "[subscription().tenantId]"
                            },
                            {
                                "key": "PCS_AUTH_INSTANCE",
                                "value": "[parameters('authorityUri')]"
                            },
                            {
                                "key": "PCS_AUTH_CLIENT_APPID",
                                "value": "[parameters('clientAppId')]"
                            },
                            {
                                "key": "PCS_AUTH_CLIENT_SECRET",
                                "value": "[parameters('clientAppSecret')]"
                            },
                            {
                                "key": "PCS_AUTH_PUBLIC_CLIENT_APPID",
                                "value": "[parameters('publicClientAppId')]"
                            },
                            {
                                "key": "PCS_AUTH_SERVICE_APPID",
                                "value": "[parameters('serviceAppId')]"
                            },
                            {
                                "key": "PCS_AUTH_SERVICE_SECRET",
                                "value": "[parameters('serviceAppSecret')]"
                            },
                            {
                                "key": "PCS_AUTH_AUDIENCE",
                                "value": "[parameters('serviceAudience')]"
                            },
                            {
                                "key": "PCS_AUTH_ISSUER",
                                "value": "[parameters('trustedTokenIssuer')]"
                            },
                            {
                                "key": "PCS_DOCKER_SERVER",
                                "value": "[parameters('dockerServer')]"
                            },
                            {
                                "key": "PCS_DOCKER_USER",
                                "value": "[parameters('dockerUser')]"
                            },
                            {
                                "key": "PCS_DOCKER_PASSWORD",
                                "value": "[parameters('dockerPassword')]"
                            },
                            {
                                "key": "PCS_IMAGES_NAMESPACE",
                                "value": "[parameters('imagesNamespace')]"
                            }
                        ]
                    },
                    "tags": {
                        "value": "[parameters('tags')]"
                    }
                },
                "templateLink": {
                    "contentVersion": "1.0.0.0",
                    "uri": "[concat(parameters('templateUrl'), 'azuredeploy.configuration.json')]"
                }
            },
            "dependsOn": [
                "[variables('minimumInfrastructureResourceId')]"
            ]
        },
        {
            "comments": "Deploy Azure Industrial IoT platform.",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-08-01",
            "name": "[variables('platformResourcName')]",
            "condition": "[variables('platformDeployment')]",
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "siteName": {
                        "value": "[parameters('siteName')]"
                    },
                    "serviceSiteName": {
                        "value": "[parameters('serviceSiteName')]"
                    },
                    "templateUrl": {
                        "value": "[parameters('templateUrl')]"
                    },
                    "keyVaultName": {
                        "value": "[reference(variables('minimumInfrastructureResourceId')).outputs.keyVaultName.value]"
                    },
                    "keyVaultUri": {
                        "value": "[reference(variables('minimumInfrastructureResourceId')).outputs.keyVaultUri.value]"
                    },
                    "managedIdentityResourceId": {
                        "value": "[reference(variables('minimumInfrastructureResourceId')).outputs.managedIdentityResourceId.value]"
                    },
                    "managedIdentityClientId": {
                        "value": "[reference(variables('minimumInfrastructureResourceId')).outputs.managedIdentityClientId.value]"
                    },
                    "managedIdentityTenantId": {
                        "value": "[reference(variables('minimumInfrastructureResourceId')).outputs.managedIdentityTenantId.value]"
                    },
                    "dockerServer": {
                        "value": "[parameters('dockerServer')]"
                    },
                    "dockerUser": {
                        "value": "[parameters('dockerUser')]"
                    },
                    "dockerPassword": {
                        "value": "[parameters('dockerPassword')]"
                    },
                    "imagesNamespace": {
                        "value": "[parameters('imagesNamespace')]"
                    },
                    "imagesTag": {
                        "value": "[parameters('imagesTag')]"
                    },
                    "authTenantId": {
                        "value": "[parameters('authTenantId')]"
                    },
                    "tags": {
                        "value": "[parameters('tags')]"
                    }
                },
                "templateLink": {
                    "contentVersion": "1.0.0.0",
                    "uri": "[concat(parameters('templateUrl'), 'azuredeploy.platform.json')]"
                }
            },
            "dependsOn": [
                "[variables('minimumInfrastructureResourceId')]"
            ]
        },
        {
            "comments": "Deploy Azure Industrial IoT Edge simulation.",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-08-01",
            "name": "[variables('simulationResourcName')]",
            "condition": "[variables('simulationDeployment')]",
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "simulationProfile": {
                        "value": "[parameters('simulationProfile')]"
                    },
                    "numberOfLinuxGateways": {
                        "value": "[parameters('numberOfLinuxGateways')]"
                    },
                    "numberOfSimulations": {
                        "value": "[parameters('numberOfSimulations')]"
                    },
                    "numberOfWindowsGateways": {
                        "value": "[parameters('numberOfWindowsGateways')]"
                    },
                    "edgeVmSize": {
                        "value": "[parameters('edgeVmSize')]"
                    },
                    "simulationVmSize": {
                        "value": "[parameters('simulationVmSize')]"  
                    },
                    "edgeUserName": {
                        "value": "[parameters('edgeUserName')]"
                    },
                    "edgePassword": {
                        "value": "[parameters('edgePassword')]"
                    },
                    "templateUrl": {
                        "value": "[parameters('templateUrl')]"
                    },
                    "simulationScriptsUrl": {
                        "value": "[variables('simulationScriptsUrl')]"
                    },
                    "iotHubHostName": {
                        "value": "[reference(variables('minimumInfrastructureResourceId')).outputs.iotHubHostName.value]"
                    },
                    "iotHubLocation": {
                        "value": "[reference(variables('minimumInfrastructureResourceId')).outputs.iotHubLocation.value]"
                    },
                    "iotHubConnString": {
                        "reference": {
                            "keyVault": {
                                "id": "[resourceId('Microsoft.KeyVault/vaults', reference(variables('minimumInfrastructureResourceId')).outputs.keyVaultName.value)]"
                            },
                            "secretName": "pcs-iothub-connstring"
                        }
                    },
                    "dockerServer": {
                        "value": "[parameters('dockerServer')]"
                    },
                    "dockerUser": {
                        "value": "[parameters('dockerUser')]"
                    },
                    "dockerPassword": {
                        "value": "[parameters('dockerPassword')]"
                    },
                    "imagesNamespace": {
                        "value": "[parameters('imagesNamespace')]"
                    },
                    "imagesTag": {
                        "value": "[parameters('imagesTag')]"
                    },
                    "tags": {
                        "value": "[parameters('tags')]"
                    }
                },
                "templateLink": {
                    "contentVersion": "1.0.0.0",
                    "uri": "[concat(parameters('templateUrl'), 'azuredeploy.simulation.json')]"
                }
            },
            "dependsOn": [
                "[variables('minimumInfrastructureResourceId')]"
            ]
        }
    ],
    "outputs": {
        "keyVaultUri": {
            "type": "string",
            "value": "[reference(variables('minimumInfrastructureResourceId'), '2017-05-10').outputs.keyVaultUri.value]"
        },
        "tenantId": {
            "type": "string",
            "value": "[subscription().tenantId]"
        },
        "serviceUrl": {
            "type": "string",
            "value": "[if (variables('platformDeployment'), reference(variables('platformResourceId'), '2017-05-10').outputs.serviceUrl.value, '')]"
        },
        "appUrl": {
            "type": "string",
            "value": "[if (variables('platformDeployment'), reference(variables('platformResourceId'), '2017-05-10').outputs.appUrl.value, '')]"
        }
    }
}