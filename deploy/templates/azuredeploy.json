{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "applicationName": {
            "type": "string",
            "defaultValue": "[concat('aip-', take(uniqueString(subscription().subscriptionId, resourceGroup().id), 5))]",
            "metadata": {
                "description": "The name of the deployment, application and platform endpoint to register."
            }
        },
        "deployOptionalServices": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Whether to deploy optional services required by samples and preview features."
            }
        },
        "aadPrincipalId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "The managed resource identity id or the name of the service principal that should register the AAD applications."
            }
        },
        "aadPrincipalPassword": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "If the aadPrincipalId parameter refers to a service principal name then specify the service principal password to use."
            }
        },
        "aadPreConfiguration": {
            "type": "secureObject",
            "defaultValue": {},
            "metadata": {
                "description": "Preconfigured aad registrations.  If provided in full set the aadPrincipalId parameter to an empty string."
            }
        },
        "existingAksClusterResourceId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "The resource id of a Azure Managed Kubernetes Cluster to deploy platform bits to - if not provided a AKS cluster will be created."
            }
        },
        "existingAksClusterAdminIdentityId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "The admin managed identity resource to access the cluster - if not provided a simple cluster will be created."
            }
        },
        "deployPlatformComponents": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Whether to deploy Platform services into the cluster. Set to false to deploy dependencies for local development."
            }
        },
        "helmRepoUrl": {
            "type": "string",
            "defaultValue": "https://microsoft.github.io/charts/repo",
            "metadata": {
                "description": "URL of the Helm repository containing azure-industrial-iot chart"
            }
        },
        "helmChartVersion": {
            "type": "string",
            "defaultValue": "0.3.1",
            "metadata": {
                "description": "Version of azure-industrial-iot Helm chart to use"
            }
        },
        "numberOfSimulations": {
            "type": "int",
            "defaultValue": 1,
            "maxValue": 255,
            "minValue": 0,
            "metadata": {
                "description": "Number of simulations to deploy into each gateway network."
            }
        },
        "simulationProfile": {
            "type": "string",
            "defaultValue": "default",
            "allowedValues": [
                "default",
                "testing"
            ],
            "metadata": {
                "description": "The simulation profile to use."
            }
        },
        "numberOfLinuxGateways": {
            "type": "int",
            "defaultValue": 1,
            "maxValue": 255,
            "minValue": 0,
            "metadata": {
                "description": "Number of OPC UA Linux simulation gateways to deploy."
            }
        },
        "numberOfWindowsGateways": {
            "type": "int",
            "defaultValue": 1,
            "maxValue": 255,
            "minValue": 0,
            "metadata": {
                "description": "Number of OPC UA Windows simulation gateways to deploy."
            }
        },
        "edgeVmSize": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "The size of the gateway VM to provision."
            }
        },
        "simulationVmSize": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "The size of the simulation VM to provision."
            }
        },
        "dockerServer": {
            "type": "string",
            "defaultValue": "mcr.microsoft.com",
            "metadata": {
                "description": "Specifies the endpoint of the Container Registry to pull workloads from."
            }
        },
        "dockerUser": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Specifies the user name to log into a private Container Registry."
            }
        },
        "dockerPassword": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "Specifies the password to use for a private Container Registry."
            }
        },
        "imagesNamespace": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Specifies the namespace prefix for all images in the Container Registry."
            }
        },
        "imagesTag": {
            "type": "string",
            "defaultValue": "latest",
            "metadata": {
                "description": "Specifies the image version tag to use for all container images."
            }
        },
        "templateUrl": {
            "type": "string",
            "defaultValue": "https://raw.githubusercontent.com/Azure/Industrial-IoT/master/deploy/templates/",
            "metadata": {
                "description": "The location where all deployment templates reside.  Default is GitHub official repository."
            }
        },
        "tags": {
            "type": "object",
            "defaultValue": {},
            "metadata": {
                "description": "Tags for Azure resources."
            }
        }
    },
    "variables": {
        "clusterNotProvided": "[or(empty(parameters('existingAksClusterResourceId')), empty(parameters('existingAksClusterAdminIdentityId')))]",
        "deployCluster": "[and(variables('clusterNotProvided'), not(empty(parameters('aadPrincipalId'))))]",
        "clusterAvailable": "[or(variables('deployCluster'), not(empty(parameters('existingAksClusterAdminIdentityId'))))]",
        "deployScriptIdentityName": "[concat('deploy-msi-', take(uniqueString(subscription().subscriptionId, resourceGroup().id), 5))]",
        "aksClusterResourceName": "services.aks",
        "aksClusterResourceId": "[resourceId('Microsoft.Resources/deployments', variables('aksClusterResourceName'))]",
        "requiredServicesResourceName": "services.required",
        "requiredServicesResourceId": "[resourceId('Microsoft.Resources/deployments', variables('requiredServicesResourceName'))]",
        "optionalServicesResourceName": "services.optional",
        "optionalServicesResourceId": "[resourceId('Microsoft.Resources/deployments', variables('optionalServicesResourceName'))]",
        "aadAppRegistrationResourceName": "services.aad",
        "aadAppRegistrationResourceId": "[resourceId('Microsoft.Resources/deployments', variables('aadAppRegistrationResourceName'))]",
        "platformResourcName": "platform",
        "platformResourceId": "[resourceId('Microsoft.Resources/deployments', variables('platformResourcName'))]",
        "simulationResourcName": "simulation"
    },
    "resources": [
        {
            "comments": "Deploy AKS managed cluster for Industrial IoT platform hosting.",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-08-01",
            "name": "[variables('aksClusterResourceName')]",
            "condition": "[and(variables('deployCluster'), parameters('deployPlatformComponents'))]",
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "aadPrincipalId": {
                        "value": "[parameters('aadPrincipalId')]"
                    },
                    "aadPrincipalPassword": {
                        "value": "[parameters('aadPrincipalPassword')]"
                    },
                    "deployScriptIdentityName": {
                        "value": "[variables('deployScriptIdentityName')]"
                    },
                    "templateUrl": {
                        "value": "[parameters('templateUrl')]"
                    },
                    "tags": {
                        "value": "[parameters('tags')]"
                    }
                },
                "templateLink": {
                    "contentVersion": "1.0.0.0",
                    "uri": "[concat(parameters('templateUrl'), 'azuredeploy.aks.json')]"
                }
            }
        },
        {
            "comments": "Deploy required Azure services for the platform components.",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-08-01",
            "name": "[variables('requiredServicesResourceName')]",
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "templateUrl": {
                        "value": "[parameters('templateUrl')]"
                    },
                    "tags": {
                        "value": "[parameters('tags')]"
                    }
                },
                "templateLink": {
                    "contentVersion": "1.0.0.0",
                    "uri": "[concat(parameters('templateUrl'), 'azuredeploy.minimum.json')]"
                }
            }
        },
        {
            "comments": "Deploy Azure optional Azure services for the platform components.",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-08-01",
            "name": "[variables('optionalServicesResourceName')]",
            "condition": "[parameters('deployOptionalServices')]",
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "templateUrl": {
                        "value": "[parameters('templateUrl')]"
                    },
                    "keyVaultName": {
                        "value": "[reference(variables('requiredServicesResourceId')).outputs.keyVaultName.value]"
                    },
                    "tags": {
                        "value": "[parameters('tags')]"
                    }
                },
                "templateLink": {
                    "contentVersion": "1.0.0.0",
                    "uri": "[concat(parameters('templateUrl'), 'azuredeploy.standard.json')]"
                }
            },
            "dependsOn": [
                "[variables('requiredServicesResourceId')]"
            ]
        },
        {
            "comments": "Register AAD entitities in Microsoft Graph.",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-08-01",
            "name": "[variables('aadAppRegistrationResourceName')]",
            "condition": "[not(and(empty(parameters('aadPreConfiguration')), empty(parameters('aadPrincipalId')), empty(parameters('aadPrincipalPassword'))))]",
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "keyVaultName": {
                        "value": "[reference(variables('requiredServicesResourceId')).outputs.keyVaultName.value]"
                    },
                    "applicationName": {
                        "value": "[parameters('applicationName')]"
                    },
                    "aadPreConfiguration": {
                        "value": "[parameters('aadPreConfiguration')]"
                    },
                    "aadPrincipalId": {
                        "value": "[parameters('aadPrincipalId')]"
                    },
                    "aadPrincipalPassword": {
                        "value": "[parameters('aadPrincipalPassword')]"
                    },
                    "deployScriptIdentityName": {
                        "value": "[variables('deployScriptIdentityName')]"
                    },
                    "templateUrl": {
                        "value": "[parameters('templateUrl')]"
                    },
                    "tags": {
                        "value": "[parameters('tags')]"
                    }
                },
                "templateLink": {
                    "contentVersion": "1.0.0.0",
                    "uri": "[concat(parameters('templateUrl'), 'azuredeploy.aad.json')]"
                }
            },
            "dependsOn": [
                "[variables('requiredServicesResourceId')]"
            ]
        },
        {
            "comments": "Deploy Azure Industrial IoT platform.",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-08-01",
            "name": "[variables('platformResourcName')]",
            "condition": "[and(variables('clusterAvailable'), parameters('deployPlatformComponents'))]",
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "aksClusterResourceId": {
                        "value": "[if(variables('deployCluster'), reference(variables('aksClusterResourceId')).outputs.aksResourceId.value, parameters('existingAksClusterResourceId'))]"
                    },
                    "aksClusterAdminIdentityResourceId": {
                        "value": "[if(variables('deployCluster'), reference(variables('aksClusterResourceId')).outputs.clusterAdminIdentityResourceId.value, parameters('existingAksClusterAdminIdentityId'))]"
                    },
                    "keyVaultName": {
                        "value": "[reference(variables('requiredServicesResourceId')).outputs.keyVaultName.value]"
                    },
                    "keyVaultUri": {
                        "value": "[reference(variables('requiredServicesResourceId')).outputs.keyVaultUri.value]"
                    },
                    "helmChartVersion": {
                        "value": "[parameters('helmChartVersion')]"
                    },
                    "helmRepoUrl": {
                        "value": "[parameters('helmRepoUrl')]"
                    },
                    "applicationName": {
                        "value": "[parameters('applicationName')]"
                    },
                    "dockerServer": {
                        "value": "[parameters('dockerServer')]"
                    },
                    "dockerUser": {
                        "value": "[parameters('dockerUser')]"
                    },
                    "dockerPassword": {
                        "value": "[parameters('dockerPassword')]"
                    },
                    "imagesNamespace": {
                        "value": "[parameters('imagesNamespace')]"
                    },
                    "imagesTag": {
                        "value": "[parameters('imagesTag')]"
                    },
                    "templateUrl": {
                        "value": "[parameters('templateUrl')]"
                    },
                    "tags": {
                        "value": "[parameters('tags')]"
                    }
                },
                "templateLink": {
                    "contentVersion": "1.0.0.0",
                    "uri": "[concat(parameters('templateUrl'), 'azuredeploy.platform.json')]"
                }
            },
            "dependsOn": [
                "[variables('aksClusterResourceId')]",
                "[variables('requiredServicesResourceId')]",
                "[variables('optionalServicesResourceId')]",
                "[variables('aadAppRegistrationResourceId')]"
            ]
        },
        {
            "comments": "Deploy Azure Industrial IoT Edge simulation.",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-08-01",
            "name": "[variables('simulationResourcName')]",
            "condition": "[not(equals(0, parameters('numberOfSimulations')))]",
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "simulationProfile": {
                        "value": "[parameters('simulationProfile')]"
                    },
                    "numberOfLinuxGateways": {
                        "value": "[parameters('numberOfLinuxGateways')]"
                    },
                    "numberOfSimulations": {
                        "value": "[parameters('numberOfSimulations')]"
                    },
                    "numberOfWindowsGateways": {
                        "value": "[parameters('numberOfWindowsGateways')]"
                    },
                    "edgeVmSize": {
                        "value": "[parameters('edgeVmSize')]"
                    },
                    "simulationVmSize": {
                        "value": "[parameters('simulationVmSize')]"  
                    },
                    "edgePassword": {
                        "reference": {
                            "keyVault": {
                                "id": "[resourceId('Microsoft.KeyVault/vaults', reference(variables('requiredServicesResourceId')).outputs.keyVaultName.value)]"
                            },
                            "secretName": "pcs-auth-service-secret"
                        }
                    },
                    "iotHubHostName": {
                        "value": "[reference(variables('requiredServicesResourceId')).outputs.iotHubHostName.value]"
                    },
                    "iotHubLocation": {
                        "value": "[reference(variables('requiredServicesResourceId')).outputs.iotHubLocation.value]"
                    },
                    "iotHubConnString": {
                        "reference": {
                            "keyVault": {
                                "id": "[resourceId('Microsoft.KeyVault/vaults', reference(variables('requiredServicesResourceId')).outputs.keyVaultName.value)]"
                            },
                            "secretName": "pcs-iothub-connstring"
                        }
                    },
                    "dockerServer": {
                        "value": "[parameters('dockerServer')]"
                    },
                    "dockerUser": {
                        "value": "[parameters('dockerUser')]"
                    },
                    "dockerPassword": {
                        "value": "[parameters('dockerPassword')]"
                    },
                    "imagesNamespace": {
                        "value": "[parameters('imagesNamespace')]"
                    },
                    "imagesTag": {
                        "value": "[parameters('imagesTag')]"
                    },
                    "templateUrl": {
                        "value": "[parameters('templateUrl')]"
                    },
                    "tags": {
                        "value": "[parameters('tags')]"
                    }
                },
                "templateLink": {
                    "contentVersion": "1.0.0.0",
                    "uri": "[concat(parameters('templateUrl'), 'azuredeploy.simulation.json')]"
                }
            },
            "dependsOn": [
                "[variables('requiredServicesResourceId')]",
                "[variables('aadAppRegistrationResourceId')]"
            ]
        }
    ],
    "outputs": {
        "keyVaultUri": {
            "type": "string",
            "value": "[reference(variables('requiredServicesResourceId'), '2017-05-10').outputs.keyVaultUri.value]"
        },
        "tenantId": {
            "type": "string",
            "value": "[subscription().tenantId]"
        },
        "serviceUrl": {
            "type": "string",
            "value": "[if (parameters('deployPlatformComponents'), reference(variables('platformResourceId'), '2017-05-10').outputs.serviceUrl.value, '')]"
        },
        "clusterName": {
            "type": "string",
            "value": "[if(variables('deployCluster'), reference(variables('aksClusterResourceId')).outputs.clusterName.value, parameters('existingAksClusterResourceId'))]"
        },
        "aksControlPlaneUrl": {
            "type": "string",
            "value": "[if(variables('deployCluster'), reference(variables('aksClusterResourceId')).outputs.aksControlPlaneUrl.value, '')]"
        },
        "clusterAdminGroupObjectId": {
            "type": "string",
            "value": "[if(variables('deployCluster'), reference(variables('aksClusterResourceId')).outputs.clusterAdminGroupObjectId.value, '')]"
        },
        "clusterAdminGroupName": {
            "type": "string",
            "value": "[if(variables('deployCluster'), reference(variables('aksClusterResourceId')).outputs.clusterAdminGroupName.value, '')]"
        }
    }
}