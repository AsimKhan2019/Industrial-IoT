{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "keyVaultName": {
            "type": "string",
            "metadata": {
                "description": "A user created keyvault containing service configuration."
            }
        },
        "applicationName": {
            "type": "string",
            "defaultValue": "[concat('svc', take(uniqueString(subscription().subscriptionId, resourceGroup().id), 5))]",
            "metadata": {
                "description": "The name of the services endpoint. Leave empty for local development."
            }
        },
        "aadManagedIdentityResourceId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "The managed resource identity under which the AAD applications are registered."
            }
        },
        "aadPrincipalId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Alternative service principal to use for registration."
            }
        },
        "aadPrincipalPassword": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "Alternative service principal password to use for registration."
            }
        },
        "aadPreConfiguration": {
            "type": "secureObject",
            "defaultValue": {},
            "metadata": {
                "description": "Alternative service principal password to use for registration."
            }
        },
        "platformInstallScriptsUrl": {
            "type": "string",
            "defaultValue": "https://raw.githubusercontent.com/Azure/Industrial-IoT/deployer/deploy/scripts/",
            "metadata": {
                "description": "The setup scripts url.  Default is official repository."
            }
        },
        "tags": {
            "type": "object",
            "defaultValue": {},
            "metadata": {
                "description": "Tags for Azure resources."
            }
        }
    },
    "variables": {
        "deploymentManagedIdentityName": "[concat('deploy_aad_msi', take(uniqueString(subscription().subscriptionId, resourceGroup().id), 5))]",
        "deploymentManagedIdentityResourceId": "[resourceId('Microsoft.Resources/deploymentScripts', variables('deploymentManagedIdentityName'))]",
        "deploymentManagedIdentityId": "[if(empty(parameters('aadManagedIdentityResourceId')), variables('deploymentManagedIdentityResourceId'), parameters('aadManagedIdentityResourceId'))]",
        "roleAssignmentdeploymentScriptName": "[guid(parameters('aadManagedIdentityResourceId'), 'aadScriptRbacGuid')]",
        "roleAssignmentdeploymentScriptId": "[resourceId('Microsoft.Authorization/roleAssignments', variables('roleAssignmentdeploymentScriptName'))]",
        "aadAppRegistrationResourceName": "[concat('deploy_aad', take(uniqueString(subscription().subscriptionId, resourceGroup().id), 5))]",
        "aadAppRegistrationResourceId": "[resourceId('Microsoft.Resources/deploymentScripts', variables('aadAppRegistrationResourceName'))]",
        "servicePrincipalAuthentication": "[and(not(empty(parameters('aadPrincipalPassword'))), not(empty(parameters('aadPrincipalId'))))]"
    },
    "resources": [
        {
            "comments": "Managed identity to access azure resources from deployment scripts if outside identity not provided.",
            "name": "[variables('deploymentManagedIdentityName')]",
            "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
            "condition": "[empty(parameters('aadManagedIdentityResourceId'))]",
            "apiVersion": "2018-11-30",
            "location": "[resourceGroup().location]",
            "tags": "[parameters('tags')]"
        },
        {
            "comments": "Assign storage and container permissions to managed identity at resource group scope.",
            "type": "Microsoft.Authorization/roleAssignments",
            "name": "[variables('roleAssignmentdeploymentScriptName')]",
            "apiVersion": "2020-04-01-preview",
            "location": "[resourceGroup().location]",
            "tags": "[parameters('tags')]",
            "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
                "principalId": "[reference(variables('deploymentManagedIdentityId'), '2018-11-30').principalId]",
                "scope": "[resourceGroup().id]",
                "principalType": "ServicePrincipal"
            },
            "dependsOn": [
                "[variables('deploymentManagedIdentityResourceId')]"
            ]
        },
        {
            "comments": "Assign keyvault secrets officer permissions to managed identity at resource group scope.",
            "type": "Microsoft.Authorization/roleAssignments",
            "name": "[variables('roleAssignmentdeploymentScriptName')]",
            "apiVersion": "2020-04-01-preview",
            "location": "[resourceGroup().location]",
            "tags": "[parameters('tags')]",
            "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', 'b86a8fe4-44ce-4948-aee5-eccb2c155cd7')]",
                "principalId": "[reference(variables('deploymentManagedIdentityId'), '2018-11-30').principalId]",
                "scope": "[resourceGroup().id]",
                "principalType": "ServicePrincipal"
            },
            "dependsOn": [
                "[variables('deploymentManagedIdentityResourceId')]"
            ]
        },
        {
            "comments": "Register the platform service application in AAD.",
            "type": "Microsoft.Resources/deploymentScripts",
            "apiVersion": "2020-10-01",
            "name": "[variables('aadAppRegistrationResourceName')]",
            "location": "[resourceGroup().location]",
            "tags": "[parameters('tags')]",
            "kind": "AzureCLI",
            "condition": "[or(not(empty(parameters('aadManagedIdentityResourceId'))), variables('servicePrincipalAuthentication'))]",
            "identity": {
            "type": "UserAssigned",
                "userAssignedIdentities": { "[variables('deploymentManagedIdentityId')]": {} }
            },
            "properties": {
                "forceUpdateTag": "[parameters('applicationName')]",
                "azCliVersion": "2.15.1",
                "primaryScriptURI": "[concat(parameters('platformInstallScriptsUrl'), 'aad-register.sh')]",
                "arguments": "[concat(' register --name \"', parameters('applicationName'), '\" --subscription \"', subscription().id, '\" --keyvault \"', parameters('keyVaultName'), '\" --sp \"', parameters('aadPrincipalId'), '\" --tenant \"', subscription().tenantId, '\"', if(empty(parameters('aadManagedIdentityResourceId')), '', ' --identity'))]",
                "timeout": "PT1H",
                "environmentVariables": [
                    {
                        "name": "principalPassword",
                        "secureValue": "[if(empty(parameters('aadManagedIdentityResourceId')), parameters('aadPrincipalPassword'), '')]"
                    },
                    {
                        "name": "config",
                        "secureValue": "[replace(string(parameters('aadPreConfiguration')), '\"', '\\\"')]"
                    }
                ],
                "cleanupPreference": "OnExpiration",
                "retentionInterval": "P1D"
            },
            "dependsOn": [
                "[variables('roleAssignmentdeploymentScriptId')]"
            ]
        }
    ],
    "outputs": {
        "serviceAppId": {
            "type": "string",
            "value": "[reference(variables('aadAppRegistrationResourceId')).outputs.serviceAppId]"
        },
        "serviceAudience": {
            "type": "string",
            "value": "[reference(variables('aadAppRegistrationResourceId')).outputs.serviceAudience]"
        },
        "clientAppId": {
            "type": "string",
            "value": "[reference(variables('aadAppRegistrationResourceId')).outputs.clientAppId]"
        },
        "webappAppId": {
            "type": "string",
            "value": "[reference(variables('aadAppRegistrationResourceId')).outputs.webappAppId]"
        },
        "tenantId": {
            "type": "string",
            "value": "[reference(variables('aadAppRegistrationResourceId')).outputs.tenantId]"
        },
        "authorityUri": {
            "type": "string",
            "value": "[reference(variables('aadAppRegistrationResourceId')).outputs.authorityUri]"
        },
        "trustedTokenIssuer": {
            "type": "string",
            "value": "[reference(variables('aadAppRegistrationResourceId')).outputs.trustedTokenIssuer]"
        }
    }
}