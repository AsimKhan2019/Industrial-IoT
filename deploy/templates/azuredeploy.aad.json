{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "applicationName": {
            "type": "string",
            "defaultValue": "[concat('svc', take(uniqueString(subscription().subscriptionId, resourceGroup().id), 5))]",
            "metadata": {
                "description": "The name of the services endpoint. Leave empty for local development."
            }
        },
        "aadManagedIdentityResourceId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "The managed resource identity under which the AAD applications are registered."
            }
        },
        "platformInstallScriptsUrl": {
            "type": "string",
            "defaultValue": "https://raw.githubusercontent.com/Azure/Industrial-IoT/deployer/deploy/scripts/",
            "metadata": {
                "description": "The setup scripts url.  Default is official repository."
            }
        },
        "tags": {
            "type": "object",
            "defaultValue": {},
            "metadata": {
                "description": "Tags for Azure resources."
            }
        }
    },
    "variables": {
        "roleAssignmentdeploymentScriptName": "[guid(subscription().subscriptionId, resourceGroup().id, 'aadScriptRbacGuid')]",
        "roleAssignmentdeploymentScriptId":  "[resourceId('Microsoft.Authorization/roleAssignments', variables('roleAssignmentdeploymentScriptName'))]",
        "aadAppRegistrationResourceName": "[concat('__aad', take(uniqueString(subscription().subscriptionId, resourceGroup().id), 5))]",
        "aadAppRegistrationResourceId":  "[resourceId('Microsoft.Resources/deploymentScripts', variables('aadAppRegistrationResourceName'))]"
    },
    "resources": [
        {
            "comments": "Assign storage and container permissions to admin managed service identity at resource group scope.",
            "type": "Microsoft.Authorization/roleAssignments",
            "name": "[variables('roleAssignmentdeploymentScriptName')]",
            "apiVersion": "2020-04-01-preview",
            "location": "[resourceGroup().location]",
            "condition":"[not(empty(parameters('aadManagedIdentityResourceId')))]",
            "tags": "[parameters('tags')]",
            "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
                "principalId": "[reference(parameters('aadManagedIdentityResourceId'), '2018-11-30').principalId]",
                "scope": "[resourceGroup().id]",
                "principalType": "ServicePrincipal"
            },
            "dependsOn": [
            ]
        },
        {
            "comments": "Register the platform service application in AAD.",
            "type": "Microsoft.Resources/deploymentScripts",
            "apiVersion": "2020-10-01",
            "name": "[variables('aadAppRegistrationResourceName')]",
            "location": "[resourceGroup().location]",            
            "tags": "[parameters('tags')]",
            "kind": "AzureCLI",
            "condition":"[not(empty(parameters('aadManagedIdentityResourceId')))]",
            "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                    "[parameters('aadManagedIdentityResourceId')]": {}
                }
            },
            "properties": {
                "forceUpdateTag": "[parameters('applicationName')]",
                "azCliVersion": "2.15.1",
                "primaryScriptURI": "[concat(parameters('platformInstallScriptsUrl'), 'aad-register.sh')]",
                "arguments": "[concat(' register-service --name ', parameters('applicationName'), '-services')]",
                "timeout": "PT1H",
                "cleanupPreference": "OnExpiration",
                "retentionInterval": "P1D"
            },
            "dependsOn": [
                "[variables('roleAssignmentdeploymentScriptId')]"
            ]
        }
    ],
    "outputs": {
        "serviceAppId": {
            "type": "string",
            "value": "[reference(variables('aadAppRegistrationResourceId')).outputs.serviceAppId]"
        },
        "serviceAppSecret": {
            "type": "string",
            "value": "[reference(variables('aadAppRegistrationResourceId')).outputs.serviceAppSecret]"
        },
        "servicePrincipalId": {
            "type": "string",
            "value": "[reference(variables('aadAppRegistrationResourceId')).outputs.servicePrincipalId]"
        },
        "serviceAudience": {
            "type": "string",
            "value": "[reference(variables('aadAppRegistrationResourceId')).outputs.serviceAudience]"
        }
    }
}