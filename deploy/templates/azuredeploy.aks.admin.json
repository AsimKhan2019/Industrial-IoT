{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "clusterName": {
            "type": "string",
            "metadata": {
                "description": "The name of the Managed Cluster resource - must be provided."
            }
        },
        "aadPrincipalId": {
            "type": "string",
            "metadata": {
                "description": "The managed resource identity id or the name of the service principal that should register the AAD applications."
            }
        },
        "aadPrincipalPassword": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "If the aadPrincipalId parameter refers to a service principal name then specify the service principal password to use."
            }
        },
        "aksAdminManagedIdentityName": {
            "type": "string",
            "defaultValue": "[concat(parameters('clusterName'), '-admin-msi')]",
            "metadata": {
                "description": "Name of the Managed identity resource of the cluster admin."
            }
        },
        "templateUrl": {
            "type": "string",
            "defaultValue": "[if(contains(deployment().properties, 'templateLink'), deployment().properties.templateLink.uri, 'https://raw.githubusercontent.com/Azure/Industrial-IoT/deployer/deploy/templates/')]",
            "metadata": {
                "description": "The artifacts url from which to pull all linked templates. Default is official repository."
            }
        },
        "tags": {
            "type": "object",
            "defaultValue": {},
            "metadata": {
                "description": "Tags for Azure resources."
            }
        }
    },
    "variables": {
        "aksAdminManagedIdentityResourceId": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('aksAdminManagedIdentityName'))]",
        "aksAdminManagedIdentityRoleAssignmentsName": "aks.admin.rbac",
        "aksAdminManagedIdentityRoleAssignmentsId": "[resourceId('Microsoft.Resources/deployments', variables('aksAdminManagedIdentityRoleAssignmentsName'))]",
        "useServicePrincipalAuthentication": "[not(empty(parameters('aadPrincipalPassword')))]",
		"aadAdminGroupRegistrationIdentityResourceId": "[if(variables('useServicePrincipalAuthentication'), variables('aksAdminManagedIdentityResourceId'), parameters('aadPrincipalId'))]",
        "aadAdminGroupRegistrationResourceName": "[concat('aks.admin.group.', take(uniqueString(subscription().subscriptionId, resourceGroup().id), 5))]",
        "aadAdminGroupRegistrationResourceId": "[resourceId('Microsoft.Resources/deploymentScripts', variables('aadAdminGroupRegistrationResourceName'))]"
    },
    "resources": [
        {
            "comments": "Create a new managed identity for automation with admin rights to the cluster.",
            "name": "[parameters('aksAdminManagedIdentityName')]",
            "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
            "apiVersion": "2018-11-30",
            "location": "[resourceGroup().location]",
            "tags": "[parameters('tags')]"
        },
        {
            "comments": "Role assignment for cluster admin managed identity.",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-08-01",
            "name": "[variables('aksAdminManagedIdentityRoleAssignmentsName')]",
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "principalId": {
                        "value": "[reference(variables('aksAdminManagedIdentityResourceId'), '2018-11-30').principalId]"
                    },
                    "assignRoles": {
                         "value": [ "AzureKubernetesServiceClusterAdmin", "Contributor" ]
                    },
                    "scope":{
                         "value": "[resourceGroup().id]"
                    },
                    "tags": {
                        "value": "[parameters('tags')]"
                    }
                },
                "templateLink": {
                    "contentVersion": "1.0.0.0",
                    "uri": "[concat(parameters('templateUrl'), 'azuredeploy.rbac.json')]"
                }
            },
            "dependsOn": [
                "[variables('aksAdminManagedIdentityResourceId')]"
            ]
        },
        {
            "comments": "Register an admin group in AAD if needed and add the managed service identity principal as member.",
            "type": "Microsoft.Resources/deploymentScripts",
            "apiVersion": "2020-10-01",
            "name": "[variables('aadAdminGroupRegistrationResourceName')]",
            "location": "[resourceGroup().location]",
            "tags": "[parameters('tags')]",
            "kind": "AzureCLI",
            "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                    "[variables('aadAdminGroupRegistrationIdentityResourceId')]": {}
                }
            },
            "properties": {
                "forceUpdateTag": "[parameters('clusterName')]",
                "azCliVersion": "2.15.1",
                "primaryScriptURI": "[concat(parameters('templateUrl'), 'scripts/group-setup.sh')]",
                "arguments": "[concat(' --description \"Administrator group for ', parameters('clusterName'), ' in resource group ', resourceGroup().name, '\" --display \"', parameters('clusterName'), ' Administrators\" --member \"', reference(variables('aksAdminManagedIdentityResourceId')).principalId, '\" --name \"', parameters('clusterName'), '\" --user \"', parameters('aadPrincipalId'), '\" --tenant \"', subscription().tenantId, '\"', if(variables('useServicePrincipalAuthentication'), '', ' --identity'))]",
                "timeout": "PT1H",
                "environmentVariables": [
                    {
                        "name": "principalPassword",
                        "secureValue": "[if(variables('useServicePrincipalAuthentication'), parameters('aadPrincipalPassword'), '')]"
                    }
                ],
                "cleanupPreference": "OnExpiration",
                "retentionInterval": "P1D"
            },
            "dependsOn": [
                "[variables('aksAdminManagedIdentityRoleAssignmentsId')]"
            ]
        }
    ],
    "outputs": {
        "clusterName": {
            "type": "string",
            "value": "[parameters('clusterName')]"
        },
        "aksAdminGroupObjectId": {
            "type": "string",
            "value": "[reference(variables('aadAdminGroupRegistrationResourceId')).outputs.groupId]"
        },
        "aksAdminGroupName": {
            "type": "string",
            "value": "[reference(variables('aadAdminGroupRegistrationResourceId')).outputs.groupName]"
        },
        "aksAdminIdentityResourceId": {
            "type": "string",
            "value": "[variables('aksAdminManagedIdentityResourceId')]"
        },
        "aksAdminIdentityPrincipalId": {
            "type": "string",
            "value": "[reference(variables('aksAdminManagedIdentityResourceId')).principalId]"
        },
        "aksAdminIdentityClientId": {
            "type": "string",
            "value": "[reference(variables('aksAdminManagedIdentityResourceId')).clientId]"
        }
    }
}